//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IService1")]
public interface IService1
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createNewUser", ReplyAction="http://tempuri.org/IService1/createNewUserResponse")]
    bool createNewUser(DataClasses.User newUser);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createNewUser", ReplyAction="http://tempuri.org/IService1/createNewUserResponse")]
    System.Threading.Tasks.Task<bool> createNewUserAsync(DataClasses.User newUser);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateUser", ReplyAction="http://tempuri.org/IService1/updateUserResponse")]
    bool updateUser(DataClasses.User user);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateUser", ReplyAction="http://tempuri.org/IService1/updateUserResponse")]
    System.Threading.Tasks.Task<bool> updateUserAsync(DataClasses.User user);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/retrieveUser", ReplyAction="http://tempuri.org/IService1/retrieveUserResponse")]
    DataClasses.User retrieveUser(string userName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/retrieveUser", ReplyAction="http://tempuri.org/IService1/retrieveUserResponse")]
    System.Threading.Tasks.Task<DataClasses.User> retrieveUserAsync(string userName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createNewListing", ReplyAction="http://tempuri.org/IService1/createNewListingResponse")]
    bool createNewListing(DataClasses.Listing newListing);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/createNewListing", ReplyAction="http://tempuri.org/IService1/createNewListingResponse")]
    System.Threading.Tasks.Task<bool> createNewListingAsync(DataClasses.Listing newListing);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllUsers", ReplyAction="http://tempuri.org/IService1/getAllUsersResponse")]
    DataClasses.User[] getAllUsers();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllUsers", ReplyAction="http://tempuri.org/IService1/getAllUsersResponse")]
    System.Threading.Tasks.Task<DataClasses.User[]> getAllUsersAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IService1Channel : IService1, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class Service1Client : System.ServiceModel.ClientBase<IService1>, IService1
{
    
    public Service1Client()
    {
    }
    
    public Service1Client(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public Service1Client(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public bool createNewUser(DataClasses.User newUser)
    {
        return base.Channel.createNewUser(newUser);
    }
    
    public System.Threading.Tasks.Task<bool> createNewUserAsync(DataClasses.User newUser)
    {
        return base.Channel.createNewUserAsync(newUser);
    }
    
    public bool updateUser(DataClasses.User user)
    {
        return base.Channel.updateUser(user);
    }
    
    public System.Threading.Tasks.Task<bool> updateUserAsync(DataClasses.User user)
    {
        return base.Channel.updateUserAsync(user);
    }
    
    public DataClasses.User retrieveUser(string userName)
    {
        return base.Channel.retrieveUser(userName);
    }
    
    public System.Threading.Tasks.Task<DataClasses.User> retrieveUserAsync(string userName)
    {
        return base.Channel.retrieveUserAsync(userName);
    }
    
    public bool createNewListing(DataClasses.Listing newListing)
    {
        return base.Channel.createNewListing(newListing);
    }
    
    public System.Threading.Tasks.Task<bool> createNewListingAsync(DataClasses.Listing newListing)
    {
        return base.Channel.createNewListingAsync(newListing);
    }
    
    public DataClasses.User[] getAllUsers()
    {
        return base.Channel.getAllUsers();
    }
    
    public System.Threading.Tasks.Task<DataClasses.User[]> getAllUsersAsync()
    {
        return base.Channel.getAllUsersAsync();
    }
}
